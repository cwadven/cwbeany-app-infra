apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-cron
  labels:
    app: django-cron
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-cron
  template:
    metadata:
      labels:
        app: django-cron
    spec:
      containers:
        - name: django-cron
          image: beany258/django:1.0.6
          command: ["/bin/sh", "-c"]
          args:
            - |
              apt-get update && apt-get install -y cron
              # vi 설치
              apt-get install -y vim
              service cron start

              # 로그 디렉토리 생성
              mkdir -p ${CRON_LOG_DIR}

              # 생성된 디렉토리에 만들어질 파일의 권한 변경
              chmod -R 777 ${CRON_LOG_DIR}
              
              # crontab 설정
              cd /app && python manage.py crontab add
              
              # cron 서비스 시작
              echo "CRON service started with log dir: ${CRON_LOG_DIR}"

              # Keep container running
              tail -f /dev/null
          envFrom:
            - configMapRef:
                name: django-config
            - secretRef:
                name: django-secret
          volumeMounts:
            - name: media
              mountPath: /app/media
            - name: logs
              mountPath: /app/logs
            - name: google-service-account
              mountPath: /app/secrets
              readOnly: true
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: django-media-pvc
        - name: logs
          emptyDir: {}
        - name: google-service-account
          secret:
            secretName: google-service-account 